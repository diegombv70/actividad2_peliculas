{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego.bedoya\\\\Documents\\\\Iudigital\\\\IngenieriaWeb2\\\\Actividad2\\\\frontend\\\\src\\\\pages\\\\Peliculas\\\\PeliculasList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PeliculasList = () => {\n  _s();\n  const [peliculas, setPeliculas] = useState([]);\n  const getPeliculas = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3000/medias\");\n      if (!response.ok) {\n        throw new Error(\"Error al obtener las películas\");\n      }\n      const data = await response.json();\n      setPeliculas(data);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"No se pudieron cargar las películas.\");\n    }\n  };\n  useEffect(() => {\n    getPeliculas();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Pel\\xEDculas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: peliculas.length > 0 ? peliculas.map(pelicula => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: pelicula.titulo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this), \" - \", pelicula.director, \" (\", pelicula.anio_estreno, \")\"]\n      }, pelicula.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay pel\\xEDculas disponibles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(PeliculasList, \"cbTdyuYjspCGGYgbBrfUQvD1Wkk=\");\n_c = PeliculasList;\nexport default PeliculasList;\nvar _c;\n$RefreshReg$(_c, \"PeliculasList\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","PeliculasList","_s","peliculas","setPeliculas","getPeliculas","response","fetch","ok","Error","data","json","error","console","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","pelicula","titulo","director","anio_estreno","id","_c","$RefreshReg$"],"sources":["C:/Users/diego.bedoya/Documents/Iudigital/IngenieriaWeb2/Actividad2/frontend/src/pages/Peliculas/PeliculasList.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst PeliculasList = () => {\r\n    const [peliculas, setPeliculas] = useState([]);\r\n\r\n    const getPeliculas = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3000/medias\");\r\n            if (!response.ok) {\r\n                throw new Error(\"Error al obtener las películas\");\r\n            }\r\n            const data = await response.json();\r\n            setPeliculas(data);\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n            alert(\"No se pudieron cargar las películas.\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPeliculas();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Lista de Películas</h2>\r\n            <ul>\r\n                {peliculas.length > 0 ? (\r\n                    peliculas.map((pelicula) => (\r\n                        <li key={pelicula.id}>\r\n                            <strong>{pelicula.titulo}</strong> - {pelicula.director} ({pelicula.anio_estreno})\r\n                        </li>\r\n                    ))\r\n                ) : (\r\n                    <p>No hay películas disponibles.</p>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PeliculasList;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;MACrD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCP,YAAY,CAACM,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BE,KAAK,CAAC,sCAAsC,CAAC;IACjD;EACJ,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACZQ,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BnB,OAAA;MAAAe,QAAA,EACKZ,SAAS,CAACiB,MAAM,GAAG,CAAC,GACjBjB,SAAS,CAACkB,GAAG,CAAEC,QAAQ,iBACnBtB,OAAA;QAAAe,QAAA,gBACIf,OAAA;UAAAe,QAAA,EAASO,QAAQ,CAACC;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,OAAG,EAACG,QAAQ,CAACE,QAAQ,EAAC,IAAE,EAACF,QAAQ,CAACG,YAAY,EAAC,GACrF;MAAA,GAFSH,QAAQ,CAACI,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACP,CAAC,gBAEFnB,OAAA;QAAAe,QAAA,EAAG;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACtC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACjB,EAAA,CArCID,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAuCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}