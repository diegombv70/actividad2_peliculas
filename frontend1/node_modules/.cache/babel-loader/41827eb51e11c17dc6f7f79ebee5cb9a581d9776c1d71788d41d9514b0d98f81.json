{"ast":null,"code":"const API_URL = \"http://localhost:8080\";\n\n// export const getDirectores = async () => {\n//     const response = await fetch(`${API_URL}/directores`);\n//     const data = await response.json();  \n//     console.log(\"📌 Directores recibidos:\", data); \n// };\n\nexport const getPeliculas = async () => {\n  const response = await fetch(`${API_URL}/medias`);\n  return response.json();\n};\nexport const getGeneros = async () => {\n  const response = await fetch(`${API_URL}/generos`);\n  return response.json();\n};\nexport const getProductoras = async () => {\n  const response = await fetch(`${API_URL}/productoras`);\n  return response.json();\n};\nexport const addPelicula = async pelicula => {\n  const response = await fetch(`${API_URL}/medias`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(pelicula)\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    console.error(\"❌ Error en la respuesta del servidor:\", data);\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return data;\n};\nexport const getTipos = async () => {\n  const response = await fetch(`${API_URL}/tipos`);\n  return response.json();\n};\nexport const addDirector = async director => {\n  const response = await fetch(`${API_URL}/directores`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(director)\n  });\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const addGenero = async genero => {\n  const response = await fetch(`${API_URL}/generos`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(genero)\n  });\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const addProductora = async productoras => {\n  const response = await fetch(`${API_URL}/productoras`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(productoras)\n  });\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const addTipo = async tipo => {\n  const response = await fetch(`${API_URL}/tipos`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(tipo)\n  });\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const getGeneroById = async id => {\n  const response = await fetch(`${API_URL}/generos/${id}`);\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const getTipoById = async id => {\n  const response = await fetch(`${API_URL}/tipos/${id}`);\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const getDirectorById = async id => {\n  const response = await fetch(`${API_URL}/directores/${id}`);\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const getProductoraById = async id => {\n  const response = await fetch(`${API_URL}/productoras/${id}`);\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const updateGenero = async (id, genero) => {\n  const response = await fetch(`${API_URL}/generos/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(genero)\n  });\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const updateTipo = async (id, tipo) => {\n  const response = await fetch(`${API_URL}/tipos/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(tipo)\n  });\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const updateProductoras = async (id, productoras) => {\n  const response = await fetch(`${API_URL}/productoras/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(productoras)\n  });\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const updateDirectores = async (id, director) => {\n  const response = await fetch(`${API_URL}/directores/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(director)\n  });\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_URL","getPeliculas","response","fetch","json","getGeneros","getProductoras","addPelicula","pelicula","method","headers","body","JSON","stringify","data","ok","console","error","Error","status","getTipos","addDirector","director","addGenero","genero","addProductora","productoras","addTipo","tipo","getGeneroById","id","getTipoById","getDirectorById","getProductoraById","updateGenero","updateTipo","updateProductoras","updateDirectores"],"sources":["C:/GIT/actividad2_peliculas/frontend1/src/services/api.js"],"sourcesContent":["const API_URL = \"http://localhost:8080\";\r\n\r\n// export const getDirectores = async () => {\r\n//     const response = await fetch(`${API_URL}/directores`);\r\n//     const data = await response.json();  \r\n//     console.log(\"📌 Directores recibidos:\", data); \r\n// };\r\n\r\n\r\nexport const getPeliculas = async () => {\r\n    const response = await fetch(`${API_URL}/medias`);\r\n    return response.json();\r\n};\r\n\r\nexport const getGeneros = async () => {\r\n    const response = await fetch(`${API_URL}/generos`);\r\n    return response.json();\r\n};\r\n\r\nexport const getProductoras = async () => {\r\n    const response = await fetch(`${API_URL}/productoras`);\r\n    return response.json();\r\n};\r\n\r\nexport const addPelicula = async (pelicula) => {\r\n    const response = await fetch(`${API_URL}/medias`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(pelicula),\r\n    });\r\n\r\n    const data = await response.json();\r\n    \r\n    if (!response.ok) {\r\n        console.error(\"❌ Error en la respuesta del servidor:\", data);\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n\r\n    return data;\r\n};\r\n\r\n\r\nexport const getTipos = async () => {\r\n    const response = await fetch(`${API_URL}/tipos`);\r\n    return response.json();\r\n};\r\n\r\nexport const addDirector = async (director) => {\r\n    const response = await fetch(`${API_URL}/directores`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(director),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n};\r\n\r\nexport const addGenero = async (genero) => {\r\n    const response = await fetch(`${API_URL}/generos`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(genero),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n};\r\n\r\nexport const addProductora = async (productoras) => {\r\n    const response = await fetch(`${API_URL}/productoras`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(productoras),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n};\r\n\r\nexport const addTipo = async (tipo) => {\r\n    const response = await fetch(`${API_URL}/tipos`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(tipo),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n};\r\n\r\nexport const getGeneroById = async (id) => {\r\n    const response = await fetch(`${API_URL}/generos/${id}`);\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n    return response.json();\r\n};\r\n\r\nexport const getTipoById = async (id) => {\r\n    const response = await fetch(`${API_URL}/tipos/${id}`);\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n    return response.json();\r\n};\r\n\r\nexport const getDirectorById = async (id) => {\r\n    const response = await fetch(`${API_URL}/directores/${id}`);\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n    return response.json();\r\n};\r\n\r\nexport const getProductoraById = async (id) => {\r\n    const response = await fetch(`${API_URL}/productoras/${id}`);\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n    return response.json();\r\n};\r\n\r\nexport const updateGenero = async (id, genero) => {\r\n    const response = await fetch(`${API_URL}/generos/${id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(genero),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n};\r\n\r\nexport const updateTipo = async (id, tipo) => {\r\n    const response = await fetch(`${API_URL}/tipos/${id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(tipo),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n};\r\n\r\nexport const updateProductoras = async (id, productoras) => {\r\n    const response = await fetch(`${API_URL}/productoras/${id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(productoras),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n};\r\n\r\nexport const updateDirectores = async (id, director) => {\r\n    const response = await fetch(`${API_URL}/directores/${id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(director),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}