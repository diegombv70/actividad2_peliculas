{"ast":null,"code":"const API_URL = \"http://localhost:3000\";\nexport const getDirectores = async () => {\n  const response = await fetch(`${API_URL}/directores`);\n  return response.json();\n};\nexport const getPeliculas = async () => {\n  const response = await fetch(`${API_URL}/peliculas`);\n  return response.json();\n};\nexport const getGeneros = async () => {\n  const response = await fetch(`${API_URL}/generos`);\n  return response.json();\n};\nexport const addPelicula = async pelicula => {\n  const response = await fetch(`${API_URL}/peliculas`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(pelicula)\n  });\n  return response.json();\n};\nexport const addDirector = async director => {\n  const response = await fetch(`${API_URL}/directores`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(director)\n  });\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const addGenero = async genero => {\n  const response = await fetch(`${API_URL}/generos`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(genero)\n  });\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const getGeneroById = async id => {\n  const response = await fetch(`${API_URL}/generos/${id}`);\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const getDirectorById = async id => {\n  const response = await fetch(`${API_URL}/directores/${id}`);\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const updateGenero = async (id, genero) => {\n  const response = await fetch(`${API_URL}/generos/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(genero)\n  });\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};\nexport const updateDirectores = async (id, Director) => {\n  const response = await fetch(`${API_URL}/directores/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(Director)\n  });\n  if (!response.ok) {\n    throw new Error(`Error HTTP: ${response.status}`);\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_URL","getDirectores","response","fetch","json","getPeliculas","getGeneros","addPelicula","pelicula","method","headers","body","JSON","stringify","addDirector","director","ok","Error","status","addGenero","genero","getGeneroById","id","getDirectorById","updateGenero","updateDirectores","Director"],"sources":["C:/Users/diego.bedoya/Documents/Iudigital/IngenieriaWeb2/Actividad2/frontend/src/services/api.js"],"sourcesContent":["const API_URL = \"http://localhost:3000\";\r\n\r\nexport const getDirectores = async () => {\r\n    const response = await fetch(`${API_URL}/directores`);\r\n    return response.json();\r\n};\r\n\r\nexport const getPeliculas = async () => {\r\n    const response = await fetch(`${API_URL}/peliculas`);\r\n    return response.json();\r\n};\r\n\r\nexport const getGeneros = async () => {\r\n    const response = await fetch(`${API_URL}/generos`);\r\n    return response.json();\r\n};\r\n\r\nexport const addPelicula = async (pelicula) => {\r\n    const response = await fetch(`${API_URL}/peliculas`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(pelicula),\r\n    });\r\n    return response.json();\r\n};\r\n\r\nexport const addDirector = async (director) => {\r\n    const response = await fetch(`${API_URL}/directores`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(director),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n};\r\n\r\nexport const addGenero = async (genero) => {\r\n    const response = await fetch(`${API_URL}/generos`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(genero),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n};\r\n\r\nexport const getGeneroById = async (id) => {\r\n    const response = await fetch(`${API_URL}/generos/${id}`);\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n    return response.json();\r\n};\r\n\r\n\r\nexport const getDirectorById = async (id) => {\r\n    const response = await fetch(`${API_URL}/directores/${id}`);\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n    return response.json();\r\n};\r\n\r\nexport const updateGenero = async (id, genero) => {\r\n    const response = await fetch(`${API_URL}/generos/${id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(genero),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n};\r\n\r\n\r\nexport const updateDirectores = async (id, Director) => {\r\n    const response = await fetch(`${API_URL}/directores/${id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(Director),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Error HTTP: ${response.status}`);\r\n    }\r\n\r\n    return response.json();\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}